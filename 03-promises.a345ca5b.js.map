{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAqBC,SAASC,cAAc,kBAC5CC,EAAoBF,SAASC,cAAc,iBAC3CE,EAAiBH,SAASC,cAAc,mBAK9C,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MAbaN,SAASC,cAAc,SAE/Ba,iBAAiB,UAe3B,SAA6BC,GAC3BA,EAAMC,iBAKN,IAJA,IAAIC,EAAkBC,OAAOnB,EAAmBoB,OAC5CC,EAAiBF,OAAOhB,EAAkBiB,OAC1CE,EAAmBH,OAAOf,EAAegB,OAEpCG,EAAI,EAAGA,GAAKD,EAAkBC,GAAK,EAC1ClB,EAAckB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAEvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAEvEW,GAAmBG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst firstDelayInputRef = document.querySelector('[name=\"delay\"]');\nconst delayStepInputRef = document.querySelector('[name=\"step\"]');\nconst amountInputRef = document.querySelector('[name=\"amount\"]');\nconst submitRef = document.querySelector('.form');\n\nsubmitRef.addEventListener('submit', onSubmitPromiseForm);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n  });\n}\n\nfunction onSubmitPromiseForm(event) {\n  event.preventDefault();\n  let firstDelayValue = Number(firstDelayInputRef.value);\n  let delayStepValue = Number(delayStepInputRef.value);\n  let amountInputValue = Number(amountInputRef.value);\n\n  for (let i = 1; i <= amountInputValue; i += 1) {\n    createPromise(i, firstDelayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    firstDelayValue += delayStepValue;\n   }\n}\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$firstDelayInputRef","document","querySelector","$ce04d3a99e08e73b$var$delayStepInputRef","$ce04d3a99e08e73b$var$amountInputRef","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","firstDelayValue","Number","value","delayStepValue","amountInputValue","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.a345ca5b.js.map"}